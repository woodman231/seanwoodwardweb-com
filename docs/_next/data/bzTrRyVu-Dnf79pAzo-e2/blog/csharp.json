{"pageProps":{"categoryDetails":{"title":"CSharp","slug":"csharp","description":"C# web programming language. Here I have written a few articles to show case my skills with the C# programming language in general.","uuid":"d69b4b0c-72e8-401f-a773-c7f44d14403e","date":1620845224225,"articlesInCategory":[{"category":{"title":"CSharp","slug":"csharp","description":"C# web programming language. Here I have written a few articles to show case my skills with the C# programming language in general.","uuid":"d69b4b0c-72e8-401f-a773-c7f44d14403e","date":1620845224225},"title":"Use your .NET Framework Skills to build a Microservice","slug":"use-your-net-framework-skills-to-build-a-microservice","description":"This article describes how to create a microservice from a .NET Framework Console Application","content":"<p>Using TopShelf and FluentScheduler NUGET packages can unlock powerful and repeatable Microservices.</p>\n<p>To get started Create a .NET Framework console application and install the TopShelf Nuget Package.</p>\n<p>Then learn by example.</p>\n<p>If you have something that needs to execute on a regular interval check out this sample application: <a href=\"https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfAndFluentScheduler\" target=\"_blank\" rel=\"noopener\">https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfAndFluentScheduler</a></p>\n<p>If you have something that needs to respond to the generation of a new file, or a folder listener check out this sample application: <a href=\"https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfFileWatcher\" target=\"_blank\" rel=\"noopener\">https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfFileWatcher</a></p>\n<p>Instruction on getting the console application off of your development computer to a service application server are in the README's of these repositories.</p>\n<p>Personally I have found that these microservices are more configurable and can have better logic and more options to create ETL processes than just SSIS packages.</p>","uuid":"f302336b-befa-48e2-8b88-024bdbaed3ce","date":1623185934375},{"category":{"title":"CSharp","slug":"csharp","description":"C# web programming language. Here I have written a few articles to show case my skills with the C# programming language in general.","uuid":"d69b4b0c-72e8-401f-a773-c7f44d14403e","date":1620845224225},"title":"C# - Use a Folder Containing JSON Files as a Defacto Database","slug":"use-a-folder-containing-json-files-as-a-defacto-database","description":"This project showcases my skills to create a class library, and unit tests. It also shows my skills with GIT and communication skills through a README.md file.","content":"<p>This might only be useful in edge cases where your application has access to the file system with state that is needed to be persisted, and a standard SQL database might not be appropriate.</p>\n<p>In any case this this project showcases my skills to create a class library, and unit tests. It also shows my skills with GIT and communication / technical writing skills through a README.md file.</p>\n<p><a href=\"https://github.com/woodman231/AspNetCoreJsonFolderRepository\" target=\"_blank\" rel=\"noopener\">https://github.com/woodman231/AspNetCoreJsonFolderRepository</a></p>","uuid":"95e5821d-02d0-4c92-b7d7-4a0fbab03d15","date":1620845484026}]}},"__N_SSG":true}