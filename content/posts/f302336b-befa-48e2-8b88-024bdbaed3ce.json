{
	"category": "d69b4b0c-72e8-401f-a773-c7f44d14403e",
	"title": "Use your .NET Framework Skills to build a Microservice",
	"slug": "use-your-net-framework-skills-to-build-a-microservice",
	"description": "This article describes how to create a microservice from a .NET Framework Console Application",
	"content": "<p>Using TopShelf and FluentScheduler NUGET packages can unlock powerful and repeatable Microservices.</p>\n<p>To get started Create a .NET Framework console application and install the TopShelf Nuget Package.</p>\n<p>Then learn by example.</p>\n<p>If you have something that needs to execute on a regular interval check out this sample application: <a href=\"https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfAndFluentScheduler\" target=\"_blank\" rel=\"noopener\">https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfAndFluentScheduler</a></p>\n<p>If you have something that needs to respond to the generation of a new file, or a folder listener check out this sample application: <a href=\"https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfFileWatcher\" target=\"_blank\" rel=\"noopener\">https://github.com/woodman231/NetFrameworkConsoleApplicationWithTopShelfFileWatcher</a></p>\n<p>Instruction on getting the console application off of your development computer to a service application server are in the README's of these repositories.</p>\n<p>Personally I have found that these microservices are more configurable and can have better logic and more options to create ETL processes than just SSIS packages.</p>",
	"uuid": "f302336b-befa-48e2-8b88-024bdbaed3ce",
	"date": 1623185934375
}